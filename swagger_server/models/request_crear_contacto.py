# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RequestCrearContacto(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, usuario_id: float=None, nombre: str=None, telefono: str=None, correo: str=None, cedula: str=None):  # noqa: E501
        """RequestCrearContacto - a model defined in Swagger

        :param usuario_id: The usuario_id of this RequestCrearContacto.  # noqa: E501
        :type usuario_id: float
        :param nombre: The nombre of this RequestCrearContacto.  # noqa: E501
        :type nombre: str
        :param telefono: The telefono of this RequestCrearContacto.  # noqa: E501
        :type telefono: str
        :param correo: The correo of this RequestCrearContacto.  # noqa: E501
        :type correo: str
        :param cedula: The cedula of this RequestCrearContacto.  # noqa: E501
        :type cedula: str
        """
        self.swagger_types = {
            'usuario_id': float,
            'nombre': str,
            'telefono': str,
            'correo': str,
            'cedula': str
        }

        self.attribute_map = {
            'usuario_id': 'USUARIO_ID',
            'nombre': 'NOMBRE',
            'telefono': 'TELEFONO',
            'correo': 'CORREO',
            'cedula': 'CEDULA'
        }
        self._usuario_id = usuario_id
        self._nombre = nombre
        self._telefono = telefono
        self._correo = correo
        self._cedula = cedula

    @classmethod
    def from_dict(cls, dikt) -> 'RequestCrearContacto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Request_CrearContacto of this RequestCrearContacto.  # noqa: E501
        :rtype: RequestCrearContacto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usuario_id(self) -> float:
        """Gets the usuario_id of this RequestCrearContacto.


        :return: The usuario_id of this RequestCrearContacto.
        :rtype: float
        """
        return self._usuario_id

    @usuario_id.setter
    def usuario_id(self, usuario_id: float):
        """Sets the usuario_id of this RequestCrearContacto.


        :param usuario_id: The usuario_id of this RequestCrearContacto.
        :type usuario_id: float
        """
        if usuario_id is None:
            raise ValueError("Invalid value for `usuario_id`, must not be `None`")  # noqa: E501

        self._usuario_id = usuario_id

    @property
    def nombre(self) -> str:
        """Gets the nombre of this RequestCrearContacto.


        :return: The nombre of this RequestCrearContacto.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this RequestCrearContacto.


        :param nombre: The nombre of this RequestCrearContacto.
        :type nombre: str
        """
        if nombre is None:
            raise ValueError("Invalid value for `nombre`, must not be `None`")  # noqa: E501

        self._nombre = nombre

    @property
    def telefono(self) -> str:
        """Gets the telefono of this RequestCrearContacto.


        :return: The telefono of this RequestCrearContacto.
        :rtype: str
        """
        return self._telefono

    @telefono.setter
    def telefono(self, telefono: str):
        """Sets the telefono of this RequestCrearContacto.


        :param telefono: The telefono of this RequestCrearContacto.
        :type telefono: str
        """
        if telefono is None:
            raise ValueError("Invalid value for `telefono`, must not be `None`")  # noqa: E501

        self._telefono = telefono

    @property
    def correo(self) -> str:
        """Gets the correo of this RequestCrearContacto.


        :return: The correo of this RequestCrearContacto.
        :rtype: str
        """
        return self._correo

    @correo.setter
    def correo(self, correo: str):
        """Sets the correo of this RequestCrearContacto.


        :param correo: The correo of this RequestCrearContacto.
        :type correo: str
        """
        if correo is None:
            raise ValueError("Invalid value for `correo`, must not be `None`")  # noqa: E501

        self._correo = correo

    @property
    def cedula(self) -> str:
        """Gets the cedula of this RequestCrearContacto.


        :return: The cedula of this RequestCrearContacto.
        :rtype: str
        """
        return self._cedula

    @cedula.setter
    def cedula(self, cedula: str):
        """Sets the cedula of this RequestCrearContacto.


        :param cedula: The cedula of this RequestCrearContacto.
        :type cedula: str
        """
        if cedula is None:
            raise ValueError("Invalid value for `cedula`, must not be `None`")  # noqa: E501

        self._cedula = cedula
