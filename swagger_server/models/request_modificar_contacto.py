# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RequestModificarContacto(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: float=None, nombre: str=None, telefono: str=None, correo: str=None):  # noqa: E501
        """RequestModificarContacto - a model defined in Swagger

        :param id: The id of this RequestModificarContacto.  # noqa: E501
        :type id: float
        :param nombre: The nombre of this RequestModificarContacto.  # noqa: E501
        :type nombre: str
        :param telefono: The telefono of this RequestModificarContacto.  # noqa: E501
        :type telefono: str
        :param correo: The correo of this RequestModificarContacto.  # noqa: E501
        :type correo: str
        """
        self.swagger_types = {
            'id': float,
            'nombre': str,
            'telefono': str,
            'correo': str
        }

        self.attribute_map = {
            'id': 'ID',
            'nombre': 'NOMBRE',
            'telefono': 'TELEFONO',
            'correo': 'CORREO'
        }
        self._id = id
        self._nombre = nombre
        self._telefono = telefono
        self._correo = correo

    @classmethod
    def from_dict(cls, dikt) -> 'RequestModificarContacto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Request_ModificarContacto of this RequestModificarContacto.  # noqa: E501
        :rtype: RequestModificarContacto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> float:
        """Gets the id of this RequestModificarContacto.


        :return: The id of this RequestModificarContacto.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id: float):
        """Sets the id of this RequestModificarContacto.


        :param id: The id of this RequestModificarContacto.
        :type id: float
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def nombre(self) -> str:
        """Gets the nombre of this RequestModificarContacto.


        :return: The nombre of this RequestModificarContacto.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this RequestModificarContacto.


        :param nombre: The nombre of this RequestModificarContacto.
        :type nombre: str
        """
        if nombre is None:
            raise ValueError("Invalid value for `nombre`, must not be `None`")  # noqa: E501

        self._nombre = nombre

    @property
    def telefono(self) -> str:
        """Gets the telefono of this RequestModificarContacto.


        :return: The telefono of this RequestModificarContacto.
        :rtype: str
        """
        return self._telefono

    @telefono.setter
    def telefono(self, telefono: str):
        """Sets the telefono of this RequestModificarContacto.


        :param telefono: The telefono of this RequestModificarContacto.
        :type telefono: str
        """
        if telefono is None:
            raise ValueError("Invalid value for `telefono`, must not be `None`")  # noqa: E501

        self._telefono = telefono

    @property
    def correo(self) -> str:
        """Gets the correo of this RequestModificarContacto.


        :return: The correo of this RequestModificarContacto.
        :rtype: str
        """
        return self._correo

    @correo.setter
    def correo(self, correo: str):
        """Sets the correo of this RequestModificarContacto.


        :param correo: The correo of this RequestModificarContacto.
        :type correo: str
        """
        if correo is None:
            raise ValueError("Invalid value for `correo`, must not be `None`")  # noqa: E501

        self._correo = correo
